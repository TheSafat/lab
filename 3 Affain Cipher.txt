#include<bits/stdc++.h>
using namespace std;

string encryption_affine(string plainText, int k1, int k2);
string decryption_affine(string cipherText, int k1, int k2);
int modInverse(int k1);

int main()
{

    freopen("inp2.txt", "r", stdin);

    string plainText;
    cin >> plainText;

    int k1, k2;
    cin >> k1 >> k2;

    if(modInverse(k1) == -1)
    {
        cout <<"There is no multiplicative inverse for " << k1<<  ". Write valid key in the text file and run again.\n";
        return 0;
    }

    string cipherText = encryption_affine(plainText, k1, k2);
    cout << "The cipherText is: " << cipherText << "\n";

    string decipherText = decryption_affine(cipherText, k1, k2);
    cout << "The decipherText is: " << decipherText << "\n";

    return 0;
}

string encryption_affine(string s, int k1, int k2)
{
    for(int i=0; i<s.length(); i++) {
        s[i] = (((s[i] - 'a') * k1) + k2) % 26 + 'A';
    }
    return s;
}

string decryption_affine(string s, int k1, int k2)
{
    int k1_inverse = modInverse(k1);

    for(int i=0; i<s.size(); i++) {
        s[i] = (((s[i] - 'A' + (26-k2)) * k1_inverse)) % 26 + 'a';
    }
    return s;
}

int modInverse(int k1)
{
    for(int i=1; i<26; i++) {
        if((k1 * i) % 26 == 1) return i;
    }
    return -1;
}

