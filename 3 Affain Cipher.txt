#include<bits/stdc++.h>
using namespace std;

string enc_affine(string s, int k1, int k2);
string dec_affine(string s, int k1, int k2);
int modInverse(int k1);

int main()
{
    freopen("inp2.txt", "r", stdin);

    string msg;
    int k1, k2;

    cin >> msg >> k1 >> k2;

    if(modInverse(k1) == -1)
    {
        cout <<"There is no multiplicative inverse for " << k1 << endl;
        return 0;
    }

    string c = enc_affine(msg, k1, k2);
    cout << "The cipherText is: " << c << "\n";

    string p = dec_affine(c, k1, k2);
    cout << "The decipherText is: " << p << "\n";

    return 0;
}

string enc_affine(string s, int k1, int k2)
{
    for(int i=0; i<s.length(); i++) {
        s[i] = (((s[i] - 'a') * k1) + k2) % 26 + 'A';
    }
    return s;
}

string dec_affine(string s, int k1, int k2)
{
    int k1_inverse = modInverse(k1);

    for(int i=0; i<s.size(); i++) {
        s[i] = (((s[i] - 'A' + (26-k2)) * k1_inverse)) % 26 + 'a';
    }
    return s;
}

int modInverse(int k1)
{
    for(int i=1; i<26; i++) {
        if((k1 * i) % 26 == 1) return i;
    }
    return -1;
}

